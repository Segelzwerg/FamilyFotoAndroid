apply plugin: 'com.android.application'
apply plugin: 'de.mannodermaus.android-junit5'
apply plugin: 'pmd'
apply plugin: 'checkstyle'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'project-report'

import io.franzbecker.gradle.lombok.task.DelombokTask

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.segelzwerg.familyfotoandroid"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument("runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude("META-INF/LICENSE*")
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "com.google.dagger:hilt-android:2.28-alpha"
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'com.google.dagger:hilt-android:2.28-alpha'
    annotationProcessor "com.google.dagger:hilt-android-compiler:2.28-alpha"

    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.0"
    testImplementation "org.mockito:mockito-core:2.28.2"
    testImplementation "org.assertj:assertj-core:3.17.2"
    testImplementation "com.squareup.okhttp3:mockwebserver:4.9.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.0"

    androidTestImplementation("org.junit.jupiter:junit-jupiter-api:5.7.0")
    androidTestImplementation 'org.mockito:mockito-android:2.23.4'
    androidTestImplementation "org.assertj:assertj-core:3.17.2"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:3.3.0"

    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.28-alpha'
    //Required to match okhttp versions for instrumental tests
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    androidTestImplementation("com.squareup.okhttp3:mockwebserver:4.9.0") {
        exclude module: 'okhttp'
    }
    androidTestAnnotationProcessor 'com.google.dagger:hilt-android-compiler:2.28-alpha'



    // 6) The instrumentation test companion libraries
    androidTestImplementation("de.mannodermaus.junit5:android-test-core:1.2.0")
    androidTestRuntimeOnly("de.mannodermaus.junit5:android-test-runner:1.2.0")

}

task checkstyle(type: Checkstyle) {
    group 'verification'
    configFile file('./config/checkstyle/checkstyle.xml')
    source 'src/main'
    classpath = files()
    include '**/*.java'
}

task pmd(type:Pmd) {
    group 'verification'
    ruleSets = ["java-basic"]
    ruleSetFiles = files './config/pmd/pmd.xml'
    reports {
        xml.enabled = false
        html.enabled = true
    }
    source 'src/main'
}

task delombok(type: DelombokTask) {
    ext.outputDir = file "$buildDir/delombok"
    outputs.dir(outputDir)
    android.sourceSets.main.java.srcDirs.each {
        inputs.dir(it)
        args(it, "-d", outputDir)
    }
}

task javadoc(type: Javadoc) {
    dependsOn delombok
    source delombok.outputDir
    destinationDir = file "doc/javadoc"
    failOnError = false
}

tasks.check.dependsOn(tasks.pmd)
tasks.check.dependsOn(tasks.checkstyle)
tasks.javadoc.dependsOn(tasks.check)